#name: Publish Package
#
#on:
#  pull_request:
#    branches:
#      - feature_ci/cd
#
#  schedule:
#    - cron: '0 0 * * 2'
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Install Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#
#      - name: Run Play test in SampleProject
#        run: |
#          cd example/SampleProject/
#          flutter test test/test_play.dart
#
#      - name: Run Publish test in SampleProject
#        run: |
#          cd example/SampleProject/
#          flutter test test/test_publish.dart
#
#      - name: Build APK
#        run: |
#          cd example/SampleProject/
#          flutter build apk
#
#      - name: Build Web
#        run: |
#          cd example/SampleProject/
#          flutter build web --release
#
#
      # Uncomment and adjust for publishing your package
      # - name: Setup Pub Credentials
      #   shell: bash
      #   env:
      #     PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
      #     PUB_DEV_PUBLISH_REFRESH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
      #     PUB_DEV_PUBLISH_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
      #     PUB_DEV_PUBLISH_EXPIRATION: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
      #   run: |
      #     sh ./pub_login.sh

      # - name: Check Publish Warnings
      #   run: |
      #      sudo cat /$HOME/.config/dart/pub-credentials.json
      #      flutter pub publish --dry-run

      # - name: Publish Package
      #   run: |
      #       yes | flutter pub publish


name: Publish Package

on:
  pull_request:
    branches:
      - feature_ci/cd

  schedule:
    - cron: '0 0 * * 2'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

#      - name: Print working directory
#        run: pwd
#
#      - name: List files in the directory
#        run: ls -R

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: |
            cd example/SampleProject/
            ls -R
            flutter test test/test_play.dart